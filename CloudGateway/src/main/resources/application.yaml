server:
  port: 9090
spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER_ADDRESS:http://localhost:9296}
  cloud:
    gateway:
#      filter:
#        request-rate-limiter:
#          deny-empty-key: false
#          empty-key-status-code: 1
      routes:
        - id : ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/v1/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: ORDER-SERVICE
                fallback: forward:/orderServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/v1/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: PAYMENT-SERVICE
                fallback: forward:/paymentServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/v1/product/**
          filters:
            - name: CircuitBreaker
              args:
                name: PRODUCT-SERVICE
                fallback: forward:/productServiceFallBack
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 1

okta:
  oauth2:
    issuer: https://dev-38798739.okta.com/oauth2/default
    audience: api://default
    client-id: 0oae6esach4NP8t4Y5d7
    client-secret: Ity4SEOwUPKoW8w_TBptx20WiquplPX8bPDenmaLJCZJas01VnRDu3AHOhAstEpk
    scopes: openid, profile, email, offline_access